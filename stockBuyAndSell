
// Program to find best buying and selling days
#include <bits/stdc++.h>

using namespace std;

// This function finds the buy sell schedule for maximum profit
void stockBuySell(int *, int);

// Driver program to test above functions
int main() {
    int T;
    cin >> T;

    while (T--) {
        int n, i;
        cin >> n;
        int price[n];
        for (i = 0; i < n; i++) cin >> price[i];
        // function call
        stockBuySell(price, n);
    }
    return 0;
}
// } Driver Code Ends


// User function template for C++

// This function finds the buy sell schedule for maximum profit
void stockBuySell(int p[], int n) {
    // code here
    int i;
    bool b = 1;
    vector<int> v;
    
    for(i = 1; i < n; i++)
    {
        if(b && p[i] > p[i-1])
        {
            v.push_back(i-1);
            b = 0;
        }
        else if(!b && p[i] < p[i-1])
        {
            v.push_back(i-1);
            b = 1;
        }
    }
    
    if(!b)
        v.push_back(n-1);
    
    b = 1;
    for(auto e : v)
    {
        if(b)
        {
            cout<<"("<<e<<" ";
            b = 0;
        }
        else
        {
            cout<<e<<") ";
            b = 1;
        }
    }
    
    if(!v.size())
        cout<<"No Profit";
    
    cout<<"\n";
}
